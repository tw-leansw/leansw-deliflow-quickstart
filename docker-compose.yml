deliflow-code-metrics-service:
  labels:
    io.rancher.container.pull_image: always
    io.ranhcer.container.hostname_override: container_name
  tty: true
  entrypoint:
  - bash
  - -c
  - PROFILE=$${ACTIVE_PROFILE:=docker} && java -Xmx512m -Djava.security.egd=file:/dev/./urandom -cp /lib/*:/lean/java/lib/*:/code-metrics.jar com.thoughtworks.lean.codemetrics.CodeMetricsService --logging.level.sun.net.www.http=DEBUG  --eureka.instance.preferIpAddress=false --spring.profiles.active=$$PROFILE
  links:
  - deliflow-discovery-service:eureka-server
  - deliflow-sonarqube:sonar-server
  - deliflow-mongo:mongo-server
  stdin_open: true
deliflow-cd-metrics-service:
  environment:
    RANCHER_ACCESS_SECRET: 14E81ABF45359F074521
    RANCHER_SECRET_KEY: E7xmHz2h22iJWUpf1atDEnqsd2zzv9udHdsQkjjy
    RANCHER_URI: http://rancher-server:8080
  external_links:
  - external-services/rancher-service:rancher-server
  labels:
    io.rancher.container.pull_image: always
    io.ranhcer.container.hostname_override: container_name
  tty: true
  entrypoint:
  - bash
  - -c
  -  PROFILE=$${ACTIVE_PROFILE:=docker} && HOST=$${GOCD_SERVER_HOST:=gocd-server} && PORT=$${GOCD_SERVER_PORT:=8153} && ROOT_PATH=$${GOCD_SERVER_ROOT:=/go} && USERNAME=$${GOCD_USERNAME:=admin} && PASSWORD=$${GOCD_PASSWORD:=badger} && java -Xmx512m -Djava.security.egd=file:/dev/./urandom -cp /lib/*:/lean/java/lib/*:/cd-metrics.jar com.thoughtworks.lean.MetricsServer --rancher.uri=$$RANCHER_URI --rancher.secretKey=$$RANCHER_SECRET_KEY --rancher.accessSecret=$$RANCHER_ACCESS_SECRET --spring.profiles.active=$$PROFILE --gocd.server.host=http://$$HOST:$$PORT$$ROOT_PATH --gocd.server.username=$$USERNAME --gocd.server.password=$$PASSWORD --eureka.instance.preferIpAddress=false 
  image: registry.aliyuncs.com/leansw/cd-metrics:latest
  links:
  - deliflow-discovery-service:eureka-server
  - deliflow-mongo:mongo-server
  - deliflow-mysql:mysql-server
  - deliflow-gocd-server:gocd-server
  - deliflow-artifactory:artifactory-server
  stdin_open: true
deliflow-sonarqube:
  ports:
  - 9000:9000/tcp
  - 9092:9092/tcp
  environment:
    SONARQUBE_JDBC_URL: jdbc:mysql://sonarqube-mysql:3306/sonarqube?useUnicode=true&characterEncoding=utf8
    SONARQUBE_JDBC_USERNAME: sonarqube
    SONARQUBE_JDBC_PASSWORD: sonarqube
  labels:
    io.rancher.container.pull_image: always
  tty: true
  image: registry.aliyuncs.com/leansw/sonarqube:quick-start
  links:
  - delilflow-sonarqube-mysql:sonarqube-mysql
  stdin_open: true
deliflow-mysql:
  environment:
    MYSQL_ROOT_PASSWORD: Leanswdev1
    MYSQL_USER: deliflow
    MYSQL_PASSWORD: deliflow
    MYSQL_DATABASE: deliflow-identity
  labels:
    io.rancher.container.pull_image: always
  tty: true
  image: registry.aliyuncs.com/leansw/mysql:5.7
  stdin_open: true
leansw-gocd-agents:
  labels:
    io.rancher.container.pull_image: always
  tty: true
  image: registry.cn-hangzhou.aliyuncs.com/leansw/go_agent16_2_1_java8
  links:
  - deliflow-gocd-server:go-server
  - deliflow-cd-metrics-service:cd-metrics
  - deliflow-artifactory:artifactory-server
  - delilflow-sonarqube-mysql:sonar-mysql
  - deliflow-sonarqube:sonar-server
  stdin_open: true
deliflow-quartz-service:
  ports:
  - 9005:9005/tcp
  environment:
    RANCHER_ACCESS_SECRET: 14E81ABF45359F074521
    RANCHER_SECRET_KEY: E7xmHz2h22iJWUpf1atDEnqsd2zzv9udHdsQkjjy
    RANCHER_URI: http://rancher-server:8080
  labels:
    io.rancher.container.pull_image: always
    io.ranhcer.container.hostname_override: container_name
  tty: true
  entrypoint:
  - bash
  - -c
  -  PROFILE=$${ACTIVE_PROFILE:=docker} && HOST=$${GOCD_SERVER_HOST:=gocd-server} && PORT=$${GOCD_SERVER_PORT:=8153} && ROOT_PATH=$${GOCD_SERVER_ROOT:=/go} && USERNAME=$${GOCD_USERNAME:=admin} && PASSWORD=$${GOCD_PASSWORD:=badger} && java -Xmx512m -Djava.security.egd=file:/dev/./urandom -cp /lib/*:/lean/java/lib/*:/quartz-service.jar com.thoughtworks.lean.quartz.QuartzService --rancher.uri=$$RANCHER_URI --rancher.secretKey=$$RANCHER_SECRET_KEY --rancher.accessSecret=$$RANCHER_ACCESS_SECRET --spring.profiles.active=$$PROFILE --gocd.server.host=http://$$HOST:$$PORT$$ROOT_PATH --gocd.server.username=$$USERNAME --gocd.server.password=$$PASSWORD --eureka.instance.preferIpAddress=false 
  image: registry.aliyuncs.com/leansw/quartz-service:latest
  links:
  - deliflow-discovery-service:eureka-server
  - deliflow-mongo:mongo-server
  stdin_open: true
deliflow-gocd-server:
  ports:
  - 8153:8153/tcp
  labels:
    io.rancher.container.pull_image: always
  tty: true
  image: registry.aliyuncs.com/leansw/gocd-server:quick-start
  links:
  - deliflow-cd-metrics-service:cd-metrics
  stdin_open: true
deliflow-auth-service:
  ports:
  - 8088:8080/tcp
  labels:
    io.rancher.container.pull_image: always
    io.ranhcer.container.hostname_override: container_name
  tty: true
  entrypoint:
  - bash
  - -c
  -  PROFILE=$${ACTIVE_PROFILE:=docker} && java -Xmx512m -Djava.security.egd=file:/dev/./urandom -cp /lib/*:/lean/java/lib/*:/auth-server.jar org.thoughtworks.lean.identity.AuthServer --spring.profiles.active=$$PROFILE --eureka.instance.preferIpAddress=false 
  image: registry.aliyuncs.com/leansw/auth-server:latest
  links:
  - deliflow-discovery-service:eureka-server
  stdin_open: true
deliflow-discovery-service:
  ports:
  - 8761:8761/tcp
  labels:
    io.rancher.container.pull_image: always
    io.ranhcer.container.hostname_override: container_name
  tty: true
  image: registry.aliyuncs.com/leansw/discovery-service:latest
  stdin_open: true
deliflow-identity-service:
  ports:
  - 2400:2400/tcp
  labels:
    io.rancher.container.pull_image: always
    io.ranhcer.container.hostname_override: container_name
  tty: true
  entrypoint:
  - bash
  - -c
  -  PROFILE=$${ACTIVE_PROFILE:=docker} && HOST=$${GOCD_SERVER_HOST:=gocd-server} && PORT=$${GOCD_SERVER_PORT:=8153} && ROOT_PATH=$${GOCD_SERVER_ROOT:=/go} && USERNAME=$${GOCD_USERNAME:=admin} && PASSWORD=$${GOCD_PASSWORD:=badger} && java -Xmx512m -Djava.security.egd=file:/dev/./urandom  -cp /lib/*:/lean/java/lib/*:/identity-services.jar com.thoughtworks.lean.identity.IdentityServer --spring.profiles.active=$$PROFILE --gocd.server.host=http://$$HOST:$$PORT$$ROOT_PATH --gocd.server.username=$$USERNAME --gocd.server.password=$$PASSWORD --eureka.instance.preferIpAddress=false 
  image: registry.aliyuncs.com/leansw/identity-services:latest
  links:
  - deliflow-discovery-service:eureka-server
  - deliflow-mysql:mysql-server
  - deliflow-gocd-server:gocd-server
  stdin_open: true
delilflow-sonarqube-mysql:
  environment:
    MYSQL_ROOT_PASSWORD: deliflow
    MYSQL_DATABASE: sonarqube
    MYSQL_USER: sonarqube
    MYSQL_PASSWORD: sonarqube
  labels:
    io.rancher.container.pull_image: always
  tty: true
  image: registry.cn-hangzhou.aliyuncs.com/leansw/mysql:5.7
  stdin_open: true
deliflow-webapp:
  ports:
  - 9900:9900/tcp
  labels:
    io.rancher.container.pull_image: always
    io.ranhcer.container.hostname_override: container_name
  tty: true
  entrypoint:
  - bash
  - -c
  - |
    PROFILE=$${ACTIVE_PROFILE:=docker} && java -Xmx512m -Djava.security.egd=file:/dev/./urandom -cp /lib/*:/lean/java/lib/*:/deliflow-webapp.jar com.thoughtworks.deliflow.DeliFlow --eureka.instance.preferIpAddress=false --spring.profiles.active=$$PROFILE 
  image: registry.aliyuncs.com/leansw/deliflow-webapp:latest
  links:
  - deliflow-discovery-service:eureka-server
  stdin_open: true
deliflow-mongo:
  labels:
    io.rancher.container.pull_image: always
  tty: true
  image: registry.aliyuncs.com/leansw/mongo:3.2.8
  stdin_open: true
deliflow-artifactory:
  ports:
  - 8081:8081/tcp
  labels:
    io.rancher.container.pull_image: always
  tty: true
  image: registry.aliyuncs.com/leansw/artifactory-oss:4.9.1
  stdin_open: true

